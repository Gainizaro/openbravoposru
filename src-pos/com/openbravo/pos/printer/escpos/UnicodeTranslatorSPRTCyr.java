//    Исходный код для Openbravo POS, автоматизированной системы продаж для работы
//    с сенсорным экраном, предоставлен ТОО "Норд-Трейдинг ЛТД", Республика Казахстан,
//    в период 2008-2010 годов на условиях лицензионного соглашения GNU LGPL.
//
//    Исходный код данного файл разработан в рамках проекта Openbravo POS ru
//    для использования системы Openbravo POS на территории бывшего СССР
//    <http://code.google.com/p/openbravoposru/>.
//
//    Openbravo POS является свободным программным обеспечением. Вы имеете право
//    любым доступным образом его распространять и/или модифицировать соблюдая
//    условия изложенные в GNU Lesser General Public License версии 3 и выше.
//
//    Данный исходный распространяется как есть, без каких либо гарантий на его
//    использование в каких либо целях, включая коммерческое применение. Данный
//    исход код может быть использован для связи с сторонними библиотеками
//    распространяемыми под другими лицензионными соглашениями. Подробности
//    смотрите в описании лицензионного соглашение GNU Lesser General Public License.
//
//    Ознакомится с условиями изложенными в GNU Lesser General Public License
//    вы можете в файле lgpl-3.0.txt каталога licensing проекта Openbravo POS ru.
//    А также на сайте <http://www.gnu.org/licenses/>.

package com.openbravo.pos.printer.escpos;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class UnicodeTranslatorSPRTCyr extends UnicodeTranslator {

        private static final byte[] CODE_TABLE_CHINA_RUS = {0x1B, 0x25, 0x01, 0x1B, 0x26, 0x03, 0x20, 0x7E,
0x0C, 0, 0, 0, 0, 0, -16, 0, 31, -16, 1, -1, 0, 15, -26, 0, 126, 6, 0, 126, 6, 0, 15, -26, 0, 1, -1, 0, 0, 31, -16, 0, 0, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 48, 96, 0, 63, -32, 0, 15, -128, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 48, -32, 48, 63, -16, 96, 15, 63, -32, 0, 15, -128, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 120, 0, 0, 120, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 63, 0, 0, -1, 0, 15, -16, 127, -1, 48, 127, -16, 48, 64, 0, 48, 64, 0, 48, 127, -1, -16, 127, -1, -1, 0, 0, 63, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 0, 48, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 126, 3, -16, 127, -113, -16, 1, -36, 0, 0, 112, 0, 127, -1, -16, 127, -1, -16, 0, 112, 0, 1, -36, 0, 127, -113, -16, 126, 3, -16, 0, 0, 0,
0x0C, 0, 0, 0, 12, 1, -128, 60, 1, -32, 48, 0, 96, 96, 96, 48, 96, 96, 48, 96, 96, 48, 96, 96, 48, 48, -16, 96, 63, -33, -32, 15, 15, -128, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 7, -64, 0, 31, 0, 0, 124, 0, 1, -16, 0, 7, -64, 0, 31, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 15, -1, -16, 15, -1, -16, -128, 1, -16, -64, 7, -64, 96, 31, 0, 96, 124, 0, -63, -16, 0, -121, -64, 0, 15, -1, -16, 15, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, -16, 0, 3, -4, 0, 63, -97, -32, 126, 7, -16, 96, 0, 48, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 48, 0, 0, -16, 127, -1, -32, 127, -1, -128, 96, 0, 0, 96, 0, 0, 96, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 31, -128, 0, 3, -32, 0, 0, -4, 0, 0, -4, 0, 3, -32, 0, 31, -128, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 15, -1, -128, 63, -1, -32, 48, 0, 96, 96, 0, 48, 96, 0, 48, 96, 0, 48, 96, 0, 48, 48, 0, 96, 63, -1, -32, 31, -1, -128, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 96, 48, 0, 96, 48, 0, 96, 48, 0, 96, 48, 0, 96, 48, 0, 48, 96, 0, 63, -32, 0, 15, -128, 0, 0, 0, 0,
0x0C, 0, 0, 0, 15, -1, -128, 63, -1, -32, 48, 0, 96, 96, 0, 48, 96, 0, 48, 96, 0, 48, 96, 0, 48, 48, 0, 96, 62, 3, -32, 14, 3, -128, 0, 0, 0,
0x0C, 0, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 127, -1, -16, 127, -1, -16, 96, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 120, 0, 0, 127, 0, 48, 7, -16, 48, 0, -2, 112, 0, 15, -32, 0, 15, -64, 0, -2, 0, 7, -16, 0, 127, 0, 0, 120, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 1, -4, 0, 7, -1, 0, 14, 3, -128, 12, 1, -128, 127, -1, -16, 127, -1, -16, 12, 1, -128, 14, 3, -128, 7, -1, 0, 1, -4, 0, 0, 0, 0,
0x0C, 0, 0, 0, 96, 0, 96, 120, 1, -32, 30, 7, -128, 7, -98, 0, 1, -8, 0, 1, -8, 0, 7, -98, 0, 30, 7, -128, 120, 1, -32, 96, 0, 96, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 48, 0, 0, 48, 0, 0, 48, 0, 0, 48, 0, 0, 48, 0, 0, 48, 127, -1, -16, 127, -1, -2, 0, 0, 62,
0x0C, 0, 0, 0, 127, -32, 0, 127, -8, 0, 0, 24, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 48, 0, 0, 48, 127, -1, -16, 127, -1, -16, 0, 0, 48, 0, 0, 48, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 48, 0, 0, 48, 127, -1, -16, 127, -1, -16, 0, 0, 48, 0, 0, 48, 127, -1, -16, 127, -1, -1, 0, 0, 63,
0x0C, 0, 0, 0, 96, 0, 0, 96, 0, 0, 127, -1, -16, 127, -1, -16, 3, 0, 48, 3, 0, 48, 3, 0, 48, 1, -128, 96, 1, -1, -32, 0, 127, -128, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 3, 0, 48, 3, 0, 48, 1, -128, 96, 1, -1, -32, 0, 127, -128, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 3, 0, 48, 3, 0, 48, 3, 0, 48, 3, 0, 48, 1, -128, 96, 1, -64, -32, 0, -1, -64, 0, 63, 0, 0, 0, 0,
0x0C, 0, 0, 0, 12, 0, -64, 60, 0, -16, 48, 0, 48, 96, 0, 24, 96, 48, 24, 96, 48, 24, 96, 48, 24, 48, 48, 48, 63, -1, -16, 15, -1, -64, 0, 0, 0,
0x0C, 0, 0, 0, 127, -1, -16, 127, -1, -16, 0, 48, 0, 0, 48, 0, 15, -1, -128, 63, -1, -32, 112, 0, 112, 96, 0, 48, 112, 0, 112, 63, -1, -32, 15, -1, -128,
0x0C, 0, 0, 0, 0, 0, 112, 15, -127, -16, 63, -25, -64, 48, 127, 0, 96, 60, 0, 96, 48, 0, 96, 48, 0, 96, 48, 0, 127, -1, -16, 127, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 0, 3, -64, 0, -57, -32, 1, -50, 112, 1, -116, 48, 3, 28, 48, 3, 24, 48, 3, 24, 48, 1, -104, 96, 1, -1, -16, 0, 127, -16, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -128, 15, -1, -32, 28, -64, 96, 25, -128, 48, 49, -128, 48, 49, -128, 48, 49, -128, 48, 48, -64, 96, 48, -1, -32, 96, 63, -128, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 3, 12, 48, 3, 12, 48, 3, 12, 48, 3, 12, 48, 1, -100, 48, 1, -10, 112, 0, -29, -32, 0, 1, -64, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, -64, 0, 3, -64, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 63, 0, 0, 127, 0, 1, -16, 3, -1, -80, 3, -2, 48, 3, 0, 48, 3, 0, 48, 3, 0, 48, 3, -1, -1, 3, -1, -1, 0, 0, 0,
0x0C, 0, 0, 0, 0, 127, -128, 1, -1, -32, 1, -116, 96, 3, 12, 48, 3, 12, 48, 3, 12, 48, 3, 12, 48, 1, -116, 96, 1, -4, -32, 0, 124, -64, 0, 0, 0,
0x0C, 0, 0, 0, 3, -64, -16, 3, -13, -16, 0, 63, 0, 0, 12, 0, 3, -1, -16, 3, -1, -16, 0, 12, 0, 0, 63, 0, 3, -13, -16, 3, -64, -16, 0, 0, 0,
0x0C, 0, 0, 0, 0, -64, -64, 1, -64, -32, 1, -128, 96, 3, 12, 48, 3, 12, 48, 3, 12, 48, 3, -98, 112, 1, -9, -32, 0, -29, -64, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, -16, 0, 3, -64, 0, 15, 0, 0, 60, 0, 0, -16, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 35, -1, -16, 48, 0, -16, 24, 3, -64, 8, 15, 0, 24, 60, 0, 48, -16, 0, 35, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 12, 0, 0, 12, 0, 0, 30, 0, 0, 127, -128, 1, -13, -32, 3, -64, -16, 3, 0, 48, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 48, 0, 0, -16, 3, -1, -32, 3, -1, -128, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, -4, 0, 0, 31, -128, 0, 3, -16, 0, 3, -16, 0, 31, -128, 0, -4, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 0, 12, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 127, -128, 1, -1, -32, 1, -128, 96, 3, 0, 48, 3, 0, 48, 3, 0, 48, 3, 0, 48, 1, -128, 96, 1, -1, -32, 0, 127, -128, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -1, 3, -1, -1, 1, -128, -64, 3, 0, 96, 3, 0, 96, 3, 0, 96, 3, 0, 96, 1, -128, -64, 1, -1, -64, 0, 127, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 127, -128, 1, -1, -32, 1, -128, 96, 3, 0, 48, 3, 0, 48, 3, 0, 48, 3, 0, 48, 1, -128, 96, 1, -31, -32, 0, 97, -128, 0, 0, 0,
0x0C, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, -1, -16, 3, -1, -16, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -128, 3, 3, -16, 3, 0, 126, 7, 0, 15, -50, 0, 1, -4, 0, 1, -16, 0, 15, -64, 0, 126, 0, 3, -16, 0, 3, -128, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 127, -128, 1, -1, -32, 3, -128, 112, 3, 0, 48, 127, -1, -1, 127, -1, -1, 3, 0, 48, 3, -128, 112, 1, -1, -32, 0, 127, -128, 0, 0, 0,
0x0C, 0, 0, 0, 3, 0, 48, 3, -64, -16, 0, -13, -64, 0, 63, 0, 0, 30, 0, 0, 63, 0, 0, -13, -64, 3, -64, -16, 3, 0, 48, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 48, 0, 0, 48, 0, 0, 48, 0, 0, 48, 3, -1, -16, 3, -1, -1, 0, 0, 63, 0, 0, 0,
0x0C, 0, 0, 0, 3, -16, 0, 3, -4, 0, 0, 12, 0, 0, 6, 0, 0, 6, 0, 0, 6, 0, 0, 6, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 48, 0, 0, 48, 3, -1, -16, 3, -1, -16, 0, 0, 48, 0, 0, 48, 3, -1, -16, 3, -1, -16, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 48, 0, 0, 48, 3, -1, -16, 3, -1, -16, 0, 0, 48, 0, 0, 48, 3, -1, -16, 3, -1, -1, 0, 0, 63,
0x0C, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, -1, -16, 3, -1, -16, 0, 24, 48, 0, 24, 48, 0, 24, 48, 0, 12, 96, 0, 15, -32, 0, 3, -128, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 24, 48, 0, 24, 48, 0, 15, -32, 0, 7, -64, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 24, 48, 0, 24, 48, 0, 24, 48, 0, 24, 48, 0, 12, 96, 0, 15, -32, 0, 3, -128, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 97, -128, 1, -31, -32, 1, -128, 96, 3, 12, 48, 3, 12, 48, 3, 12, 48, 1, -116, 96, 1, -1, -32, 0, 127, -128, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 3, -1, -16, 3, -1, -16, 0, 12, 0, 0, 127, -128, 1, -1, -32, 3, -128, 112, 3, 0, 48, 3, -128, 112, 1, -1, -32, 0, 127, -128, 0, 0, 0,
0x0C, 0, 0, 0, 0, -16, 48, 1, -8, -16, 1, -101, -32, 3, 15, -128, 3, 14, 0, 3, 12, 0, 3, 12, 0, 3, -1, -16, 3, -1, -16, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 31, -1, -16, 31, -1, -16, 24, 48, 48, -40, 48, 48, -40, 48, 48, 24, 48, 48, -40, 48, 48, -40, 48, 48, 24, 0, 48, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, -40, 0, 15, -1, -128, 63, -1, -32, 48, -40, 96, 96, -40, 48, 96, -40, 48, 96, -40, 48, 96, 0, 48, 48, 0, 96, 62, 3, -32, 14, 3, -128,
0x0C, 0, 0, 0, 6, 41, -64, 14, 43, -32, 24, 47, 48, 24, 62, 48, 24, 60, 48, 24, 120, 48, 24, 120, 48, 29, -24, 48, 15, -88, -32, 7, 40, -64, 0, 0, 0,
0x0C, 0, 0, 0, 0, 127, -128, 1, -1, -32, 1, -116, 96, 27, 12, 48, 27, 12, 48, 3, 12, 48, 27, 12, 48, 25, -116, 96, 1, -4, -32, 0, 124, -64, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0x0C, 0, 0, 0, 108, 0, 0, 108, 0, 0, 108, 0, 0, 108, 0, 0, 111, -1, -16, 111, -1, -16, 108, 0, 0, 108, 0, 0, 108, 0, 0, 108, 0, 0, 0, 0, 0
    };

    /** Creates a new instance of UnicodeTranslatorInt */
    public UnicodeTranslatorSPRTCyr() {
    }

    public byte[] getCodeTable() {
        return CODE_TABLE_CHINA_RUS;
    }
    
    public final byte[] convertString(String sConvert) {
        ByteArrayOutputStream lineout = new ByteArrayOutputStream();

        for (int i = 0; i < sConvert.length(); i++) {

            char cConvertChar = sConvert.charAt(i);
            if ((cConvertChar >= 0x0020) && (cConvertChar < 0x0080)) {
                try {
                    lineout.write(ESCPOS.CANCEL_USER_CHAR);
                    lineout.write(transChar(cConvertChar));
                    lineout.write(ESCPOS.SELECT_USER_CHAR);
                } catch (IOException ex) {
                }
            } else if (cConvertChar >= 0x0410 && cConvertChar < 0x0450 || cConvertChar == 0x0401 || cConvertChar == 0x0451 || cConvertChar == 0x20B8 || cConvertChar == 0x20AC || cConvertChar == 0x20B4) {
                lineout.write(transChar(cConvertChar));
            } else {
                try {
                    lineout.write(ESCPOS.CANCEL_USER_CHAR);
                    lineout.write(new byte[]{0x3F});
                    lineout.write(ESCPOS.SELECT_USER_CHAR);
                } catch (IOException ex) {
                }
            }

        }
        return lineout.toByteArray();
    }

    private byte transChar(char sChar) {
        if ((sChar >= 0x0020) && (sChar < 0x0080)) {
            return (byte) sChar;
        } else {
            switch (sChar) {

                default: return 0x3F; // ? Not valid character.

//            case '\u0030': return (byte) 0x40;// 0
//            case '\u0031': return (byte) 0x41;// 1
//            case '\u0032': return (byte) 0x42;// 2
//            case '\u0033': return (byte) 0x43;// 3
//            case '\u0034': return (byte) 0x44;// 4
//            case '\u0035': return (byte) 0x45;// 5
//            case '\u0036': return (byte) 0x46;// 6
//            case '\u0037': return (byte) 0x47;// 7
//            case '\u0038': return (byte) 0x48;// 8
//            case '\u0039': return (byte) 0x49;// 9

            // ru - Russian (Cyrillic) upload code page
            case '\u0410': return (byte) 0x20;// A
            case '\u0411': return (byte) 0x21;// Б
            case '\u0412': return (byte) 0x22;// В
            case '\u0413': return (byte) 0x23;// Г
            case '\u0414': return (byte) 0x24;// Д
            case '\u0415': return (byte) 0x25;// Е
            case '\u0401': return (byte) 0x60;// Ё
            case '\u0416': return (byte) 0x26;// Ж
            case '\u0417': return (byte) 0x27;// З
            case '\u0418': return (byte) 0x28;// И
            case '\u0419': return (byte) 0x29;// Й
            case '\u041A': return (byte) 0x2A;// К
            case '\u041B': return (byte) 0x2B;// Л
            case '\u041C': return (byte) 0x2C;// М
            case '\u041D': return (byte) 0x2D;// Н
            case '\u041E': return (byte) 0x2E;// О
            case '\u041F': return (byte) 0x2F;// П
            case '\u0420': return (byte) 0x30;// Р
            case '\u0421': return (byte) 0x31;// С
            case '\u0422': return (byte) 0x32;// Т
            case '\u0423': return (byte) 0x33;// У
            case '\u0424': return (byte) 0x34;// Ф
            case '\u0425': return (byte) 0x35;// Х
            case '\u0426': return (byte) 0x36;// Ц
            case '\u0427': return (byte) 0x37;// Ч
            case '\u0428': return (byte) 0x38;// Ш
            case '\u0429': return (byte) 0x39;// Щ
            case '\u042A': return (byte) 0x3A;// Ъ
            case '\u042B': return (byte) 0x3B;// Ы
            case '\u042C': return (byte) 0x3C;// Ь
            case '\u042D': return (byte) 0x3D;// Э
            case '\u042E': return (byte) 0x3E;// Ю
            case '\u042F': return (byte) 0x3F;// Я
            case '\u0430': return (byte) 0x40;// a
            case '\u0431': return (byte) 0x41;// б
            case '\u0432': return (byte) 0x42;// в
            case '\u0433': return (byte) 0x43;// г
            case '\u0434': return (byte) 0x44;// д
            case '\u0435': return (byte) 0x45;// е
            case '\u0451': return (byte) 0x70;// ё
            case '\u0436': return (byte) 0x46;// ж
            case '\u0437': return (byte) 0x47;// з
            case '\u0438': return (byte) 0x48;// и
            case '\u0439': return (byte) 0x49;// й
            case '\u043A': return (byte) 0x4A;// к
            case '\u043B': return (byte) 0x4B;// л
            case '\u043C': return (byte) 0x4C;// м
            case '\u043D': return (byte) 0x4D;// н
            case '\u043E': return (byte) 0x4E;// о
            case '\u043F': return (byte) 0x4F;// п
            case '\u0440': return (byte) 0x50;// р
            case '\u0441': return (byte) 0x51;// с
            case '\u0442': return (byte) 0x52;// т
            case '\u0443': return (byte) 0x53;// у
            case '\u0444': return (byte) 0x54;// ф
            case '\u0445': return (byte) 0x55;// х
            case '\u0446': return (byte) 0x56;// ц
            case '\u0447': return (byte) 0x57;// ч
            case '\u0448': return (byte) 0x58;// ш
            case '\u0449': return (byte) 0x59;// щ
            case '\u044A': return (byte) 0x5A;// ъ
            case '\u044B': return (byte) 0x5B;// ы
            case '\u044C': return (byte) 0x5C;// ь
            case '\u044D': return (byte) 0x5D;// э
            case '\u044E': return (byte) 0x5E;// ю
            case '\u044F': return (byte) 0x5F;// я

            case '\u00A0': return (byte) 0x20;// &nbsp
//            case '\u2116': return (byte) 0xFC;// №
            case '\u20AC': return (byte) 0x6E;// €
            case '\u20B4': return (byte) 0x6F;// ₴
            case '\u20B8': return (byte) 0x7E;// ₸

            }
        }
    }
}