//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.
package com.openbravo.pos.printer.screen;

import java.awt.*;
import javax.swing.*;
//import java.awt.image.BufferedImage;
import com.openbravo.pos.printer.*;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.printer.ticket.BasicTicket;
import com.openbravo.pos.printer.ticket.BasicTicketForScreen;

public class DeviceLabelPanel extends javax.swing.JPanel implements DeviceLabelPrinter {

    private String m_sName;
    private JTicketContainer m_jTicketContainer;
    private BasicTicket m_ticketcurrent;

    /** Creates new form JPrinterScreen2 */
    public DeviceLabelPanel() {
        initComponents();

        m_sName = AppLocal.getIntString("PrinterLabel.Screen");

        m_ticketcurrent = null;

        m_jTicketContainer = new JTicketContainer();
        m_jScrollView.setViewportView(m_jTicketContainer);
    }

    public String getLabelPrinterName() {
        return m_sName;
    }

    public String getLabelPrinterDescription() {
        return null;
    }

    public JComponent getLabelPrinterComponent() {
        return this;
    }

    public void reset() {
        m_ticketcurrent = null;
        m_jTicketContainer.removeAllTickets();
        m_jTicketContainer.repaint();
    }

    public void beginLabel(String sCodePage, String sWidth, String sHeight, String sGap) {
        m_ticketcurrent = new BasicTicketForScreen();
    }

    public void printBarcodeBox(String sTypeBarcode, String sLabelX, String sLabelY, String sHeight, String sRotation, String sCode) {
        m_ticketcurrent.printBarCode(sTypeBarcode, sLabelY, sCode);
    }

    public void drawLineBox(String sLabelX, String sLabelY, String sWidth, String sHeight) {
    }

    public void drawRectangleBox(String sLabelX, String sLabelY, String sWidth, String sHeight) {
    }

    public void printTextBox(String sCharset, String sFontPoint, String sLabelX, String sLabelY, String sRotation, String sText) {
        int iStyle = 1;
        m_ticketcurrent.printText(iStyle, sText);
    }

    public void endLabel() {
        m_jTicketContainer.addTicket(new JTicket(m_ticketcurrent));
        m_ticketcurrent = null;
    }

//    public void openDrawer() {
//        // Una simulacion
//        Toolkit.getDefaultToolkit().beep();
//    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_jScrollView = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(m_jScrollView, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane m_jScrollView;
    // End of variables declaration//GEN-END:variables
}
